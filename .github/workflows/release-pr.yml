name: Create Release PR

on:
  push:
    tags:
      # 数字だけで構成されてるタグ( = release)
      - '\d\.\d\.\d'

jobs:
  build:
    name: create release PR
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: get commit diff summary
        id: get_previous_tag
        run: |
          PREVIOUS_TAG=$(git tag --sort=-creatordate | grep -E '^[0-9]*\.[0-9]*\.[0-9]*' | sed -n 2p)
          echo "PREVIOUS_TAG: $PREVIOUS_TAG"
          echo ::set-output name=PREVIOUS_TAG::$PREVIOUS_TAG

      # - name: generate release note
      #   id: get_release_note
      #   uses: actions/github-script@v5
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       const notes = await github.rest.repos.generateReleaseNotes({
      #         ...context.repo,
      #         tag_name: "${{github.ref_name}}",
      #         previous_tag_name: "${{steps.get_previous_tag.outputs.PREVIOUS_TAG}}"
      #       });
      #       return notes

      - name: generate release note
        id: get_release_note
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const notes = await github.request('POST /repos/{owner}/{repo}/releases/generate-notes', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: 'tag_name',
              previous_tag_name: "${{steps.get_previous_tag.outputs.PREVIOUS_TAG}}"
            });
            return notes

      # - name: generate release note
      #   id: get_release_note
      #   run: |
      #     #  oktokitがまだ対応してないっぽい？
      #     echo $(curl -X POST -H 'Accept: application/vnd.github.v3+json' -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'  https://api.github.com/repos/${{ github.repository }}/releases/generate-notes -d '{"tag_name":"${{github.ref_name}}", "previous_tag_name":"${{steps.get_previous_tag.outputs.PREVIOUS_TAG}}"}' | jq .body | sed 's,",,g' | sed "s,',,g")
      #     $NOTES = $(curl -X POST -H 'Accept: application/vnd.github.v3+json' -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'  https://api.github.com/repos/${{ github.repository }}/releases/generate-notes -d '{"tag_name":"${{github.ref_name}}", "previous_tag_name":"${{steps.get_previous_tag.outputs.PREVIOUS_TAG}}"}' | jq .body | sed 's,",,g' | sed "s,',,g")
      #     echo $NOTES
      #     echo ::set-output name=NOTES::$NOTES

      - name: create PR to master from develop
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.pulls.create({
              ...context.repo,
              head: "develop",
              base: "master",
              title: "release v${{github.ref_name}} to master",
              body: "${{steps.get_release_note.outputs.result}}",
              draft: true
            });
