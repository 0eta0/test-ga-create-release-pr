name: Create Release PR

on:
  push:
    tags:
      # 数字だけで構成されてるタグ( = release)
      - '\d\.\d\.\d'

jobs:
  build:
    name: create release PR
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: get commit diff summary
        id: get_previous_tag
        run: |
          PREVIOUS_TAG=$(git tag --sort=-creatordate | grep -E '^[0-9]*\.[0-9]*\.[0-9]*' | sed -n 2p)
          echo "PREVIOUS_TAG: $PREVIOUS_TAG"
          echo ::set-output name=PREVIOUS_TAG::$PREVIOUS_TAG

      - name: generate release note
        id: get_release_note
        run: |
          NOTES=$(curl -X POST -H 'Accept: application/vnd.github.v3+json' -H 'authorization: Bearer ${{secrets.GITHUB_TOKEN}}'  https://api.github.com/repos/${{github.repository}}/releases/generate-notes -d '{"tag_name":"${{github.ref_name}}", "previous_tag_name":"${{steps.get_previous_tag.outputs.PREVIOUS_TAG}}"}' | jq .body | sed -e "s/'/ /g" | sed -e "s/\"/ /g")
          echo $NOTES
          echo ::set-output name=NOTES::$NOTES

      - name: check same pr is exist
        id: get_pr_list
        uses: actions/github-script@v5
        env:
          VERSION: ${{github.ref_name}}
          SUMMARY: ${{steps.get_release_note.outputs.NOTES}}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const list = await github.rest.pulls.list({
              ...context.repo,
              head: "develop",
              base: "master",
              state: "open"
            });
            return list;

      - name: get PR id
        id: get_pr_id
        uses: actions/github-script@v5
        env:
          JSON: ${{steps.get_pr_list.outputs.result}}
        with:
          script: |
            const parsed = JSON.parse(process.env.JSON);
            if (0 < Object.keys(parsed.data).length) {
              return parsed.data[0].number;
            } else {
              return "";
            };

      - name: create PR to master from develop
        if: "steps.get_pr_id.outputs.PULL_NUMBER == ''"
        uses: actions/github-script@v5
        env:
          VERSION: ${{github.ref_name}}
          SUMMARY: ${{steps.get_release_note.outputs.NOTES}}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.pulls.create({
              ...context.repo,
              head: "develop",
              base: "master",
              title: `[release] v${process.env.VERSION} to master`,
              body: process.env.SUMMARY,
              draft: true
            });

      - name: update PR to master from develop
        if: "steps.get_pr_id.outputs.PULL_NUMBER != ''"
        uses: actions/github-script@v5
        env:
          VERSION: ${{github.ref_name}}
          SUMMARY: ${{steps.get_release_note.outputs.NOTES}}
          PULL_NUMBER: ${{steps.get_pr_id.outputs.PULL_NUMBER}}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.pulls.update({
              ...context.repo,
              pull_number: process.env.PULL_NUMBER,
              title: `[release] v${process.env.VERSION} to master`,
              body: process.env.SUMMARY,
              draft: true
            });
